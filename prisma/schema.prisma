// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL") // refers to the .env file in the source code
}

model Post {
  id          Int           @id @default(autoincrement())
  title       String
  content     String
  published   Boolean
  createdAt   DateTime      @default(now()) // From the schema we are letting prisma know that when a post record is created at the table, the createdAt field must be filled automatically with the current data and time
  updatedAt   DateTime      @updatedAt // From the schema we are letting prisma know that when a post is created/updated, automatically fill the column updatedAt with data and time of updation        
  authorId    Int           // Foreign key mapping to user id
  author      User          @relation(fields: [authorId], references: [id])  // Establishing many-to-one relationship with Post and User. fields represent the field that acts as the foreign key and references refer to the primary key of the opposite relation

}

model User {
  id          Int           @id @default(autoincrement())
  email       String        @unique
  name        String?
  password    String
  createdAt   DateTime      @default(now()) 
  updatedAt   DateTime      @updatedAt
  posts       Post[]        // Setting relation with User and Post
  profile     Profile?      // Making profile optional since profile cannot exist without a user.
}


model Profile {
    id          Int           @id @default(autoincrement())
    bio         String
    createdAt   DateTime      @default(now()) 
    updatedAt   DateTime      @updatedAt
    userId      Int           @unique
    user        User          @relation(fields: [userId], references: [id])
}

// After defining the model specifications in the schema file, we need to push the schema to the db we are connected to. To push the schema, run npx prisma db push.

// To visualize the data, we can use the command 